{"version":3,"sources":["assets\\Scipts\\Asteroide.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAsC,4BAAY;IAAlD;;IA4BA,CAAC;IA1BG,2BAAQ,GAAR;QACI,IAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,EAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;IACL,CAAC;IAED,wBAAwB;IACxB,mCAAgB,GAAhB,UAAiB,aAAa,EAAC,YAAY;QACvC,IAAG,YAAY,CAAC,IAAI,IAAI,4BAA4B,IAAI,aAAa,CAAC,IAAI,IAAI,wBAAwB,EAAC;YACnG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC;YAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;IACL,CAAC;IAED,yBAAM,GAAN;QACI,IAAI,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QAChD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,wBAAK,GAAL,cAAU,CAAC;IAEX,yBAAM,GAAN,UAAQ,EAAE;QACP,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAK,GAAG,GAAC,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,4BAAS,GAAT,cAAY,CAAC;IA3BI,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA4B5B;IAAD,eAAC;CA5BD,AA4BC,CA5BqC,EAAE,CAAC,SAAS,GA4BjD;kBA5BoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    Destruir(){\r\n        if(this.node.getPosition().y > 0){\r\n            this.node.destroy();\r\n        }\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onCollisionEnter(otherCollider,selfCollider){\r\n        if(selfCollider.name == 'Asteroide<PolygonCollider>' && otherCollider.name == 'Nave2<PolygonCollider>'){\r\n            this.node.parent.getComponent('Game').CollisionAsteroide();\r\n            this.node.destroy();  \r\n        }\r\n    }\r\n\r\n    onLoad () {\r\n        var manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n    }\r\n\r\n    start () {}\r\n\r\n    update (dt) {\r\n       this.node.setPosition(this.node.position.x,this.node.position.y  -= 300*dt); \r\n    }\r\n\r\n    onDestroy(){}\r\n}\r\n"]}